webpackJsonp([0xca012eb2869],{510:function(n,a){n.exports={data:{site:{siteMetadata:{title:"Ryan Oglesby"}},markdownRemark:{id:"/Users/ryanoglesby/Projects/blog/src/src/pages/watching-the-watchers-in-angularjs/index.md absPath of file >>> MarkdownRemark",html:'<p>I have been doing quite a bit of AngularJS performance tweaking on my latest project. It is no\nsecret that Angular performance can quickly degrade due to the implementation of its\n<a href="https://docs.angularjs.org/guide/scope">digest cycle</a>. I’ll avoid Angular bashing here because this\nis well-documented and blogged about to death (Google it). You’re welcome.</p>\n<p>Instead, I want to share a few learnings that I have picked up while attacking the performance\nproblems with having too many bindings and watchers in any Angular application.</p>\n<!-- more -->\n<h2>Should I even be worried?</h2>\n<p>The first step is actually knowing if you have a problem. Eventually, on my project, we could feel\nthe responsiveness of our application start to slip. Rendering seemed to slow down. Interactions\nstarted to feel sluggish. You would click a toggle, it would wait a tick, and then change states.\nThings like that. Even if you aren’t noticing anything this drastic, its still a good idea to get\nsome insight and follow best practices though.</p>\n<p>In order to help pinpoint the hotspots in your Angular app, I developed this\n<a href="https://chrome.google.com/webstore/detail/angularjs-inspect-watcher/gdfcinoagafkodbnkjemaajfahnmfkhg">Chrome extension</a>\nto count how many watchers different sections of your app contain.</p>\n<h2><a href="https://docs.angularjs.org/guide/expression#one-time-binding">Bind once</a> is your friend</h2>\n<p>This one is the easiest and has a big ROI. When using the normal binding syntax\n<code class="language-text">{{ &lt;expression&gt; }}</code>, Angular sets up a two-way binding so that the view can be automatically upated\nwhen the underlying data changes. However, there are probably some static data in your app, which\nmakes the two-way binding both redundant and costly because Angular re-evaluates that expression\nduring every digest cycle to update your view with any changes. The bind once syntax eliminates\nthat. Quick win.</p>\n<div class="gatsby-highlight">\n      <pre class="language-text"><code class="language-text">{{ ::item.name }}</code></pre>\n      </div>\n<p><em>Note: only available in Angular 1.3 and later</em></p>\n<h2>Avoid excess use of ng-show/ng-hide</h2>\n<p>These directives are easy to abuse. When you have multiple elements that need to be hidden or shown\nbased on similar conditions, you can often combine multiple <code class="language-text">ng-show/ng-hides</code> into a single\n<code class="language-text">ng-class</code> and sprinkle in some targetted CSS rules to achieve the same behavior with fewer\nwatchers.</p>\n<p>So this, which contains 3 <code class="language-text">ng-show/ng-hide</code> watchers…</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-hide</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.isSoldOut()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Price: $49.99<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.isSoldOut()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Not in Stock<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ ::item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">ng-hide</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.isSoldOut()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    Ships within 3-5 business days\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>Can be turned into this, which contains 1 watcher - the <code class="language-text">ng-class</code>:</p>\n<div class="gatsby-highlight">\n      <pre class="language-css item.css"><code class="language-css item.css">.item .show-when-sold-out {\n  display: none;\n}\n\n.item.sold-out .show-when-sold-out {\n  display: block;\n}\n.item.sold-out .hide-when-sold-out {\n  display: none;\n}</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span> <span class="token attr-name">ng-class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>{sold-out: item.isSoldOut()}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hide-when-sold-out<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Price: $49.99<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show-when-sold-out<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Not in Stock<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>{{ ::item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hide-when-sold-out<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    Ships within 3-5 business days\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<h2>Beware the ng-repeat</h2>\n<p>A = How many watchers does each element of your <code class="language-text">ng-repeat</code> contain?<br/> B = How many elements will\nyou be iterating over?</p>\n<p><code class="language-text">if(A * B &gt; 3000) { console.log(&quot;Houston we have a problem&quot;); }</code></p>\n<p>On my current project, we were blindly using <code class="language-text">ng-repeat</code> on elements that contained over 50 watchers\neach. This was fine for some users who only had a few items in the list. But when we hit some users\nwho loaded over 400 elements into that list, (50 * 400 = 20,000), our digest cycle slowed to a\ncrawl and we even crashed the browser sometimes. (Especially mobile browesers.) Oops.</p>\n<p>Besides using the other tips listed on this page to reduce the overall number of watchers, my advice\nis to think about the user experience of your app. Do you really need to render all those elements\nin one big list? Enter pagination. Enter filtering and searching.</p>\n<p>We went with a hand-rolled pagination solution because the available plugins didn’t quite fit our\nneeds.</p>\n<h2>Lazy evaluation of DOM elements</h2>\n<p>Take this example:</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{{ ::item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.expand()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item-info<span class="token punctuation">"</span></span> <span class="token attr-name">ng-show</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.isExpanded()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>{{ item.description }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">ng-submit</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.addComment(comment)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">ng-model</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comment<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>\n    <span class="token comment">&lt;!-- More bindings and watchers --></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>Even though the elements in <code class="language-text">div.item-info</code> are hidden, the watchers and bindings on those elements\nwill still be evaluated by Angular during the digest cycles. There is actually no point in compiling\nand linking all the DOM elements in the hidden <code class="language-text">div.item-info</code> section until the user actually\nclicks the expansion trigger. We found that we could get a huge performance boost by taking\nadvantage of templates and changing the structure of our HTML a bit. So when the user clicks on the\nexpansion trigger, we grab the appropriate template, compile and link it with the data, and insert\nthat into the DOM!</p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item-header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{{ ::item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ng-click</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item.expand()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>+<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>item-info<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/ng-template<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>expandedItem.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">\n  <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> item<span class="token punctuation">.</span>description <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n  <span class="token operator">&lt;</span>form ng<span class="token operator">-</span>submit<span class="token operator">=</span><span class="token string">"item.addComment(comment)"</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> ng<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">"comment"</span> <span class="token operator">/</span><span class="token operator">></span>\n    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> <span class="token operator">/</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>\n  <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> More bindings and watchers <span class="token operator">--</span><span class="token operator">></span>\n</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>\n      </div>\n<p>The one caveat here is that once the user has expanded the item, all the watchers and bindings from\nthe expanded item are now part of the digest cycle. The more elements you expand, the more watchers\nyou end up with. This worked on my application because we expect the user to only expand a few\nelements out of a long list - a big savings. If you expect the user to quickly show all the elements\nyou were initially hiding, this may not help much. In any case, it should at least help with initial\npage load time because the <code class="language-text">ng-templates</code> are not compiled until you explicity tell Angular to.</p>\n<h2>Resources</h2>\n<p>I read a lot of blog articles and documentation while messing around with all of this. One that I\nfound particularly useful was <a href="http://ng.malsup.com/">Ng Nuggets</a>. Thanks!</p>',frontmatter:{title:"Watching the Watchers in AngularJS",date:"April 07, 2015"}}},pathContext:{slug:"/watching-the-watchers-in-angularjs/",previous:{fields:{slug:"/easing-into-rubocop-with-git/"},frontmatter:{title:"Easing into Rubocop with git"}},next:{fields:{slug:"/hackathons-for-the-enterprise/"},frontmatter:{title:"Hackathons for the Enterprise"}}}}}});
//# sourceMappingURL=path---watching-the-watchers-in-angularjs-8ef6c9bf00667abce7e6.js.map