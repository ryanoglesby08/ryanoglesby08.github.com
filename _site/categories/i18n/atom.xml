<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: i18n | Ryan Oglesby]]></title>
  <link href="http://ryanogles.by/categories/i18n/atom.xml" rel="self"/>
  <link href="http://ryanogles.by/"/>
  <updated>2016-10-16T16:23:54+01:00</updated>
  <id>http://ryanogles.by/</id>
  <author>
    <name><![CDATA[Ryan Oglesby]]></name>
    <email><![CDATA[{"address"=>"ryan.oglesby08@gmail.com"}]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Fun With Rails I18n]]></title>
    <link href="http://ryanogles.by/rails/i18n/2013/01/29/fun-with-rails-i18n.html"/>
    <updated>2013-01-29T20:00:00+00:00</updated>
    <id>http://ryanogles.by/rails/i18n/2013/01/29/fun-with-rails-i18n</id>
    <content type="html"><![CDATA[Skipping the Basics...
------------------------
Anyone wanting to develop a truly internationalized application needs to address translating the text of the app into the supported languages. Fortunately for you Rails devs out there, the framework provides an easy mechanism for managing and performing those translations, I18n.translate or shortly I18n.t being the forefront. I am just going to mention the basics here and then move right on to some of the more fun features of Rails translations that every Rails ninja needs to know.

<!-- more -->

So we all know how to do basic translations:

<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="s">en</span><span class="pi">:</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="s">hello-world</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Oh</span><span class="nv"> </span><span class="s">hai,</span><span class="nv"> </span><span class="s">World,</span><span class="nv"> </span><span class="s">you</span><span class="nv"> </span><span class="s">are</span><span class="nv"> </span><span class="s">looking</span><span class="nv"> </span><span class="s">nice'</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="s">views</span><span class="pi">:</span>
</div></div><div data-line='4' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="s">welcome</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Welcome,</span><span class="nv"> </span><span class="s">%&#x7b;user_name&#x7d;'</span></div></div></pre></div></figure>


<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'hello-world'</span><span class="p">)</span>  <span class="c1"># Oh hai, World, you are looking nice</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.welcome'</span><span class="p">,</span> <span class="ss">user_name: </span><span class="s1">'OptimusPrime'</span><span class="p">)</span>  <span class="c1"># Welcome, OptimusPrime</span></div></div></pre></div></figure>


Now some things you may not know about.


Pluralization
------------------------
When you do translations you don't have to try to hack together interpolated strings using `ActiveSupport#pluralize`. Pluralizations are baked right in.

<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="s">en</span><span class="pi">:</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="s">views</span><span class="pi">:</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="s">messages</span><span class="pi">:</span>
</div></div><div data-line='4' class='code-highlight-row numbered'><div class='code-highlight-line'>      <span class="s">zero</span><span class="pi">:</span> <span class="s1">'</span><span class="s">You</span><span class="nv"> </span><span class="s">got</span><span class="nv"> </span><span class="s">no</span><span class="nv"> </span><span class="s">messages</span><span class="nv"> </span><span class="s">here</span><span class="nv"> </span><span class="s">fool!'</span>
</div></div><div data-line='5' class='code-highlight-row numbered'><div class='code-highlight-line'>      <span class="s">one</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Only</span><span class="nv"> </span><span class="s">1</span><span class="nv"> </span><span class="s">message</span><span class="nv"> </span><span class="s">right</span><span class="nv"> </span><span class="s">now.'</span>
</div></div><div data-line='6' class='code-highlight-row numbered'><div class='code-highlight-line'>      <span class="s">other</span><span class="pi">:</span> <span class="s1">'</span><span class="s">You</span><span class="nv"> </span><span class="s">have</span><span class="nv"> </span><span class="s">%&#x7b;count&#x7d;</span><span class="nv"> </span><span class="s">messages.'</span></div></div></pre></div></figure>


<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.messages'</span><span class="p">,</span> <span class="ss">count: </span><span class="mi">0</span><span class="p">)</span>  <span class="c1"># You got no messages here fool!</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.messages'</span><span class="p">,</span> <span class="ss">count: </span><span class="mi">1</span><span class="p">)</span>  <span class="c1"># Only 1 message right now.</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.messages'</span><span class="p">,</span> <span class="ss">count: </span><span class="mi">5</span><span class="p">)</span>  <span class="c1"># You have 5 messages.</span></div></div></pre></div></figure>


HTML Safe
------------------------
As a general rule, I avoid putting HTML markup in a translation string. HTML markup should be in the view where it belongs. However, despite my best efforts, sometimes it is unavoidable - which is okay in certain situations. Furthermore, sometimes the variables passed into a translation will contain HTML markup. The default strategy in this situation that I have seen is to use `raw` or `html_safe`. While this does the job, it adds unnecessary method calls when the HTML safe-ification can be handled directly by I18n using the `_html` suffix.

<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="s">en</span><span class="pi">:</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="s">views</span><span class="pi">:</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="s">account-will-be-locked_html</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Your</span><span class="nv"> </span><span class="s">account</span><span class="nv"> </span><span class="s">is</span><span class="nv"> </span><span class="s">about</span><span class="nv"> </span><span class="s">to</span><span class="nv"> </span><span class="s">be</span><span class="nv"> </span><span class="s">&lt;strong&gt;locked&lt;/strong&gt;'</span>
</div></div><div data-line='4' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="s">remaining-characers</span><span class="pi">:</span>
</div></div><div data-line='5' class='code-highlight-row numbered'><div class='code-highlight-line'>      <span class="s">html</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Remaining</span><span class="nv"> </span><span class="s">characters:</span><span class="nv"> </span><span class="s">%&#x7b;amount&#x7d;'</span></div></div></pre></div></figure>


<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.account-will-be-locked_html'</span><span class="p">)</span>  <span class="c1"># 'Your account is about to be &lt;strong&gt;locked&lt;/strong&gt;' (marked HTML safe for the view)</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.remaining-characers.html'</span><span class="p">,</span> <span class="ss">amount: </span><span class="s1">'&lt;em&gt;50&lt;/em&gt;'</span><span class="p">)</span>  <span class="c1"># 'Remaining characters: &lt;em&gt;50&lt;/em&gt;' (marked HTML safe for the view)</span></div></div></pre></div></figure>


Though you do receive the added benefit of avoiding unnecessary `html_safe` calls, the real winner here it that by being explicit in the locale file, you tell any other developers looking at it which strings are expected to have HTML. Easy win for visibility and communication.


Watch Out for yes/no!
------------------------
This is a weird one. I am actually not sure why this happens, and would appreciate if anyone can shed some light on the underlying reason for this. If you try to use the key "yes" or "no," I18n.t will not be able to find it.

<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="s">en</span><span class="pi">:</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="s">views</span><span class="pi">:</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="s">yes</span><span class="pi">:</span> <span class="s1">'</span><span class="s">Sure</span><span class="nv"> </span><span class="s">thing'</span>
</div></div><div data-line='4' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="s">no</span><span class="pi">:</span> <span class="s1">'</span><span class="s">No</span><span class="nv"> </span><span class="s">way!'</span></div></div></pre></div></figure>


<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.yes'</span><span class="p">)</span>  <span class="c1"># &lt;span class="translation_missing" title="translation missing: en.views.yes"&gt;Yes&lt;/span&gt;</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="n">t</span><span class="p">(</span><span class="s1">'views.no'</span><span class="p">)</span>  <span class="c1"># &lt;span class="translation_missing" title="translation missing: en.view.yes"&gt;No&lt;/span&gt;</span></div></div></pre></div></figure>


Only solution I know is just to not use "yes" or "no" as keys, which is not ideal if you are adding a translation for those exact words.


Literal Naming FTW
------------------------
It can be quite tempting to use semantic keys in your locale YML files. I see things like "title," "introduction-1," or "header-text." While this will work fine, I prefer to use literal keys that reflect the actual content of the translation (in the default locale) so my views are easier to read for myself and other developers.

<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="p">-</span> <span class="c1"># Hard to read. I have to jump out of my code just to read my own code! Ergggggghhhh</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="nc">.header</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.header.user-intro'</span><span class="p">,</span> <span class="ss">user: </span><span class="vi">@current_user</span><span class="p">)</span>
</div></div><div data-line='4' class='code-highlight-row numbered'><div class='code-highlight-line'> </div></div><div data-line='5' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="nc">.main-content</span>
</div></div><div data-line='6' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="nt">%p</span>
</div></div><div data-line='7' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.common.site-description-1'</span><span class="p">)</span>
</div></div><div data-line='8' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="nt">%p</span>
</div></div><div data-line='9' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.common.site-description-2'</span><span class="p">)</span>
</div></div><div data-line='10' class='code-highlight-row numbered'><div class='code-highlight-line'> </div></div><div data-line='11' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="nt">%ul</span>
</div></div><div data-line='12' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="nt">%li</span>
</div></div><div data-line='13' class='code-highlight-row numbered'><div class='code-highlight-line'>      <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.common.user-perks-1'</span><span class="p">)</span></div></div></pre></div></figure>


<figure class='code-highlight-figure'><div class='code-highlight'><pre class='code-highlight-pre'><div data-line='1' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="p">-</span> <span class="c1"># Easy to read. I understand my own code. Yessssssssss</span>
</div></div><div data-line='2' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="nc">.header</span>
</div></div><div data-line='3' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.header.welcome-to-the-site'</span><span class="p">,</span> <span class="ss">user: </span><span class="vi">@current_user</span><span class="p">)</span>
</div></div><div data-line='4' class='code-highlight-row numbered'><div class='code-highlight-line'> </div></div><div data-line='5' class='code-highlight-row numbered'><div class='code-highlight-line'><span class="nc">.main-content</span>
</div></div><div data-line='6' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="nt">%p</span>
</div></div><div data-line='7' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.common.we-have-doo-dads'</span><span class="p">)</span>
</div></div><div data-line='8' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="nt">%p</span>
</div></div><div data-line='9' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.common.and-foo-bar-widgets'</span><span class="p">)</span>
</div></div><div data-line='10' class='code-highlight-row numbered'><div class='code-highlight-line'> </div></div><div data-line='11' class='code-highlight-row numbered'><div class='code-highlight-line'>  <span class="nt">%ul</span>
</div></div><div data-line='12' class='code-highlight-row numbered'><div class='code-highlight-line'>    <span class="nt">%li</span>
</div></div><div data-line='13' class='code-highlight-row numbered'><div class='code-highlight-line'>      <span class="p">=</span> <span class="n">t</span><span class="p">(</span><span class="s1">'views.common.receive-service-any-time'</span><span class="p">)</span></div></div></pre></div></figure>


That's all for now! Most of this plus everything else you wanted to know about i18n can be found in the [Rails Guides](http://guides.rubyonrails.org/i18n.html).

Bye! Adios! Adieu! Aloha!
]]></content>
  </entry>
  
</feed>
